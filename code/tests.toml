# runtime = { FetchVersion = "latest" }
runtime = { RepoPath = "../kinode" }
persist_home = false
runtime_build_release = false
always_print_node_output = false


# TODO: reenable
# [[tests]]
# dependency_package_paths = ["chat-with-file-transfer", "file-transfer"]
# setup_packages = [
#     { path = "chat-with-file-transfer", run = true }
# ]
# setup_scripts = []
# test_package_paths = ["chat-with-file-transfer/test/chat-with-file-transfer-test"]
# test_scripts = []
# timeout_secs = 5
# fakechain_router = 8545
#
# [[tests.nodes]]
# port = 8080
# home = "home/first"
# fake_node_name = "first.dev"
# runtime_verbosity = 2
#
# [[tests.nodes]]
# port = 8081
# home = "home/second"
# fake_node_name = "second.dev"
# runtime_verbosity = 2


[[tests]]
dependency_package_paths = ["mfa-data-demo"]
setup_packages = [
    { path = "mfa-data-demo", run = true }
]
setup_scripts = []
test_package_paths = ["mfa-data-demo/test/mfa-data-demo-test"]
test_scripts = []
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = ["mfa-fe-demo"]
setup_packages = [
    { path = "mfa-fe-demo", run = true }
]
setup_scripts = []
test_package_paths = ["mfa-fe-demo/test/mfa-fe-demo-test"]
test_scripts = [
    "mfa-fe-demo/curl-endpoint.sh",
]
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = []
setup_packages = [
    { path = "mfa-message-demo", run = true }
]
setup_scripts = []
test_package_paths = ["mfa-message-demo/test/mfa-message-demo-test"]
test_scripts = []
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = ["remote-file-storage/server"]
setup_packages = [
    { path = "remote-file-storage/server", run = true }
]
setup_scripts = []
test_package_paths = ["remote-file-storage/test/remote-file-storage-test"]
test_scripts = []
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2

[[tests.nodes]]
port = 8081
home = "home/second"
fake_node_name = "second.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = []
setup_packages = [
    { path = "spawn", run = true }
]
setup_scripts = []
test_package_paths = ["spawn/test/spawn-test"]
test_scripts = []
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = []
setup_packages = [
    { path = "ws-client", run = false }
]
setup_scripts = [
    "ws-client/requirements.sh && ws-client/ws-server.py",
]
test_package_paths = ["ws-client/test/ws-client-test"]
test_scripts = []
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = []
setup_packages = [
    { path = "ws-server", run = true }
]
setup_scripts = []
test_package_paths = []
test_scripts = [
    "ws-server/requirements.sh && ws-server/ws-client.py",
]
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2


[[tests]]
dependency_package_paths = []
setup_packages = [
    { path = "ws-server-with-reply", run = true }
]
setup_scripts = []
test_package_paths = []
test_scripts = [
    "ws-server-with-reply/requirements.sh && ws-server-with-reply/ws-client.py",
]
timeout_secs = 5
fakechain_router = 8545

[[tests.nodes]]
port = 8080
home = "home/first"
fake_node_name = "first.dev"
runtime_verbosity = 2
